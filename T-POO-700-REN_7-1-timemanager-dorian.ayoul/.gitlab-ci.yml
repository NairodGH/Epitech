variables:
  # Front
  PATH_FRONTEND: ./frontend
  NODE_IMAGE: node:20.9.0-alpine
  NPM_GLOBAL_CACHE: /cache/.npm_global_cache
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"

  # Backend
  PATH_BACKEND: ./backend

  # Update
  ALPINE_IMAGE: alpine:3.14.2

stages:
  - âœ… front install
  - ðŸ–Œ front format
  - ðŸ›  front build
  - ðŸ“¦ update

# Frontend
.job_template: &job_redirect
  before_script:
    - cd $PATH_FRONTEND

.node_modules_cache_var:
  - &node_modules_cache
    key:
      files:
        - $PATH_FRONTEND/package-lock.json
    paths:
      - $PATH_FRONTEND/node_modules
    policy: pull

install:
  <<: *job_redirect
  image: $NODE_IMAGE
  stage: âœ… front install
  cache:
    - <<: *node_modules_cache
      policy: push
  script:
    - npm ci --cache $NPM_GLOBAL_CACHE
  except:
    - tags

lint:
  <<: *job_redirect
  image: $NODE_IMAGE
  stage: ðŸ–Œ front format
  cache:
    - *node_modules_cache
  script:
    - npm run prettier:check
  except:
    - tags

build:
  <<: *job_redirect
  image: $NODE_IMAGE
  stage: ðŸ›  front build
  cache:
    - *node_modules_cache
  script:
    - npm run build
  except:
    - tags

# Backend

# Update
update:
  image: $ALPINE_IMAGE
  stage: ðŸ“¦ update
  script:
    - apk add --no-cache git
    - git config user.name "$GITLAB_USERNAME"
    - git config user.email "gitlab@ci.com"
    - git remote add github_repo https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/EpitechMscProPromo2025/$GITHUB_REPO_NAME.git
    - git fetch --unshallow
    - git push github_repo HEAD:main --force
  only:
    - main
